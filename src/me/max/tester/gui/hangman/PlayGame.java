/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package me.max.tester.gui.hangman;

import java.util.ArrayList;
import java.util.Arrays;
import me.max.tester.managers.file.LFileWriter;
import me.max.tester.managers.lists.ArrayListStringBuilder;
import me.max.tester.managers.lists.JoinChar;
import me.max.tester.managers.lists.JoinString;
import me.max.tester.managers.random.RandomElement;
import me.max.tester.managers.system.SystemExit;
import me.max.tester.managers.system.SystemSleep;
import me.max.tester.managers.time.DateTime;

/**
 *
 * @author mc170171
 */
public class PlayGame extends javax.swing.JFrame {

    protected ArrayList<Character> usedLetters = new ArrayList<>();
    protected int maxLives = 7;         // any value greater than 7 will break
    protected boolean gameStarted = false;
    protected ArrayList goodLetters;
    protected String[] words;
    protected JoinChar j = new JoinChar();
    protected ArrayList<Character> unScores = new ArrayList<>();
    protected int lostLives = 1;
    protected String fileName = "hangmanScores";
    private String word;
    JoinString js = new JoinString();

    /**
     * Creates new form PlayGame
     */
    public PlayGame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hangmanTitle = new javax.swing.JLabel();
        howToPlayTitle = new javax.swing.JLabel();
        ruleOne = new javax.swing.JLabel();
        goButton = new javax.swing.JButton();
        submitLetterButton1 = new javax.swing.JButton();
        submitLetterButton2 = new javax.swing.JButton();
        selextLetterBox = new javax.swing.JComboBox<>();
        hangmanPictureChange = new javax.swing.JLabel();
        letterDisplay = new javax.swing.JLabel();
        ruleOne1 = new javax.swing.JLabel();
        exitProgram = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        hangmanTitle.setBackground(new java.awt.Color(153, 153, 153));
        hangmanTitle.setFont(new java.awt.Font("Arial Black", 1, 28)); // NOI18N
        hangmanTitle.setForeground(new java.awt.Color(0, 102, 204));
        hangmanTitle.setText("Hangman");
        hangmanTitle.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                hangmanTitleMouseDragged(evt);
            }
        });

        howToPlayTitle.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        howToPlayTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        howToPlayTitle.setText("How to Play:");

        ruleOne.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        ruleOne.setText("1) Select a letter from the dropdown");

        goButton.setBackground(new java.awt.Color(204, 204, 204));
        goButton.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        goButton.setForeground(new java.awt.Color(255, 0, 51));
        goButton.setText("GO!");
        goButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goButtonActionPerformed(evt);
            }
        });

        submitLetterButton1.setBackground(new java.awt.Color(204, 204, 204));
        submitLetterButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        submitLetterButton1.setForeground(new java.awt.Color(255, 0, 51));
        submitLetterButton1.setText("Submit Letter");
        submitLetterButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitLetterButton1ActionPerformed(evt);
            }
        });

        submitLetterButton2.setBackground(new java.awt.Color(204, 204, 204));
        submitLetterButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        submitLetterButton2.setForeground(new java.awt.Color(255, 0, 51));
        submitLetterButton2.setText("Main Menu");
        submitLetterButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitLetterButton2ActionPerformed(evt);
            }
        });

        selextLetterBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" }));

        hangmanPictureChange.setIcon(new javax.swing.ImageIcon(getClass().getResource("/me/max/tester/gui/hangman/resources/stages/1.fw.png"))); // NOI18N
        hangmanPictureChange.setText("[hangman pics]");

        letterDisplay.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        letterDisplay.setText("_");

        ruleOne1.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        ruleOne1.setText("2) When you're ready, press GO!");

        exitProgram.setBackground(new java.awt.Color(204, 204, 204));
        exitProgram.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        exitProgram.setForeground(new java.awt.Color(255, 0, 51));
        exitProgram.setText("Exit Game");
        exitProgram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitProgramActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(goButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(311, 311, 311))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hangmanTitle)
                                    .addComponent(ruleOne, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ruleOne1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(howToPlayTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(letterDisplay)
                                .addGap(76, 76, 76)))
                        .addComponent(hangmanPictureChange, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selextLetterBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(submitLetterButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(submitLetterButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(exitProgram, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hangmanPictureChange, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hangmanTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(howToPlayTitle)
                            .addComponent(letterDisplay))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ruleOne)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ruleOne1)
                        .addGap(18, 18, 18)
                        .addComponent(goButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(24, 24, 24)))
                .addComponent(selextLetterBox, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitLetterButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitLetterButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitProgram, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hangmanTitleMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hangmanTitleMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_hangmanTitleMouseDragged

    private void submitLetterButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitLetterButton2ActionPerformed
        new FirstMenu().setVisible(true);
        FirstMenu fm = new FirstMenu();
        fm.setDifficulty();
        this.dispose();
    }//GEN-LAST:event_submitLetterButton2ActionPerformed

    private void goButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goButtonActionPerformed
        setRandomWord();
        gameStarted = true;
        goButton.setVisible(false);
    }//GEN-LAST:event_goButtonActionPerformed
    
    private void saveScoreToFile() {
        
        LFileWriter f = new LFileWriter();
        FirstMenu m = new FirstMenu();
        DateTime dt = new DateTime();
        
        String date = dt.getDateTime();
        ArrayList arrayList = new ArrayList(Arrays.asList(words));
        String joint = js.join(arrayList, " ");
        
        String result = date + " - Lost Lives: " + (lostLives-1) + "/6 - Difficulty: " + m.getDiffStr() + " - Word: '" + getWord() + "' --> '" + joint + "'";
        
        f.writeToFile(result, fileName, true);
        
    }
    
    private void submitLetterButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitLetterButton1ActionPerformed

        if (gameStarted == false) {
            System.out.println("The game has not started.");
        } else {
            String letterStr = (String)selextLetterBox.getSelectedItem();
            char letter = letterStr.charAt(0);
            
            if (!usedLetters.contains(letter)) {
                
                usedLetters.add(letter);
                System.out.println(letter + " added");
                if (getWord().contains(letterStr)) { 
                    for (int i = 0; i<word.length(); i++) {
                        if (word.charAt(i) == letter) {
                            words[i] = letterStr;
                        }
                    }
                    ArrayList arrayList = new ArrayList(Arrays.asList(words));
                    String joint = js.join(arrayList, " ");
                    setUnScores(joint);
                    
                    if (joint.contains("_")) {
                        
                        System.out.println(getWord());
                        
                    } else {
                        saveScoreToFile();
                        new WinnerPage().setVisible(true);
                        this.dispose();
                        
                    }

                } else {
                    lostLives++;
                    String direc = "/me/max/tester/gui/hangman/resources/stages/" + lostLives +".fw.png";
                    hangmanPictureChange.setIcon(new javax.swing.ImageIcon(getClass().getResource(direc)));
                    
                    if (lostLives == maxLives) {
                        System.out.println("YOU DIED! The word was: " + getWord());
                        saveScoreToFile();
                        
                        new LoserPage().setVisible(true);
                        this.dispose();

                    }

                }
                
            } else {
                System.out.println(letter + " is already added!");
            }
        }
        
    }//GEN-LAST:event_submitLetterButton1ActionPerformed

    private void exitProgramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitProgramActionPerformed
        SystemExit n = new SystemExit();
        this.dispose();
        n.exitProgram();
    }//GEN-LAST:event_exitProgramActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void setUnScores(String set) {
        letterDisplay.setText(set);
    }
    
    public String getWord() {
        return this.word;
    }
    
    public void setWord(String enter) {
        word = enter;
       // this.word = enter;
    }
    
    public void setRandomWord() {
        FirstMenu m = new FirstMenu();
        ArrayListStringBuilder list = new ArrayListStringBuilder();
        RandomElement ri = new RandomElement();
        ArrayList randomWords = new ArrayList();
        if (m.difficulty == true) {
                randomWords = list.buildArrayListStr("hello-cheese-world-smile-crime-fruit-mouse-truch-lorry-table-napkin-greet", "-");
        } else {
            randomWords = list.buildArrayListStr("chocolate-diabolical-oxymoron-critical-analysis-opposition-defensiveness-notifications-challenge", "-");
        }
        String word = ri.randomElement(randomWords).toUpperCase();

        words = new String[word.length()];
        for (int i = 0; i<word.length(); i++) {
            words[i] = "_";
            unScores.add('_');
        }
        
        setUnScores(j.join(unScores, " "));
        setWord(word);
        System.out.println(getWord());

    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayGame().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitProgram;
    private javax.swing.JButton goButton;
    private javax.swing.JLabel hangmanPictureChange;
    private javax.swing.JLabel hangmanTitle;
    private javax.swing.JLabel howToPlayTitle;
    private javax.swing.JLabel letterDisplay;
    private javax.swing.JLabel ruleOne;
    private javax.swing.JLabel ruleOne1;
    private javax.swing.JComboBox<String> selextLetterBox;
    private javax.swing.JButton submitLetterButton1;
    private javax.swing.JButton submitLetterButton2;
    // End of variables declaration//GEN-END:variables
}
